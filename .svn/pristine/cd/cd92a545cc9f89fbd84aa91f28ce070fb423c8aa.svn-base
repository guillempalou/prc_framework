// --------------------------------------------------------------
// Copyright (C)
// Universitat Politecnica de Catalunya (UPC) - Barcelona - Spain
// --------------------------------------------------------------

//!
//!  \file multiarray_math.test
//!
//!  multiarray tests
//!

#include <iostream>
#include <imageplus/core/multiarray_math.hpp>

#include <boost/test/floating_point_comparison.hpp>

BOOST_AUTO_TEST_SUITE ( multiarrayMathSuite );

using namespace imageplus;
using namespace std;


typedef boost::mpl::list<uint8, int64,float64> DataTypes;
typedef boost::mpl::list<int64,float64> DataTypes2;


BOOST_AUTO_TEST_CASE_TEMPLATE( MultiArray_sqr, T, DataTypes )
{
    
    MultiArray<T,1> ma1(10), ma2(10);

    ma1 = static_cast<T>(2);

    ma2 = imageplus::sqr(ma1);
        
    BOOST_CHECK_EQUAL(ma2[5], static_cast<T>(4));
}    

BOOST_AUTO_TEST_CASE_TEMPLATE( MultiArray_sqrt, T, DataTypes )
{
    
    MultiArray<T,2> ma1(10,10);
    MultiArray<float64,2> ma2(10,10);

    ma1 = static_cast<T>(4);

    ma2 = imageplus::sqrt(ma1);
        
    BOOST_CHECK_CLOSE(ma2[5][5], static_cast<float64>(2),1e-5);
}    

BOOST_AUTO_TEST_CASE_TEMPLATE( MultiArray_abs, T, DataTypes2 )
{
    
    MultiArray<T,1> ma1(10), ma2(10);

    ma1 = static_cast<T>(-2);

    ma2 = imageplus::abs(ma1);
        
    BOOST_CHECK_EQUAL(ma2[5], static_cast<T>(2));
}    


BOOST_AUTO_TEST_CASE_TEMPLATE( MultiArray_random, T, DataTypes )
{
    BOOST_WARN_MESSAGE(false, "TEST NOT IMPLEMENTED: MultiArray_random");
    
//    MultiArray<T,1> ma1(10);
//    imageplus::random(ma1, static_cast<T>(10));
//    //std::cout << ma1;
//    BOOST_CHECK_EQUAL(ma2[5], static_cast<T>(2));
}    



BOOST_AUTO_TEST_SUITE_END ();
