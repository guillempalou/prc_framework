/*
 * evaluate_partition.cpp
 *
 *  Created on: Jan 8, 2013
 *      Author: gpalou
 */


#include <imageplus/core/image_signal.hpp>

#include <imageplus/segmentation/partition/partition.hpp>
#include <imageplus/segmentation/visualization/false_color.hpp>
#include <imageplus/segmentation/measures/segmentation_covering.hpp>
#include <imageplus/segmentation/measures/boundary_recall.hpp>

#include <iomanip>

using namespace imageplus;

#define uint64 imageplus::uint64
#define int64 imageplus::int64

typedef ImageSignal<float64,3> 					ImageType;
typedef segmentation::Partition<uint64,2>		PartitionType;

typedef ImageType::coord_type coord2d;
typedef ImageType::value_type rgb_type;

int main(int argc, char *argv[]) {
	std::string path 	= argv[1];
	std::string path_gt	= argv[2];

	ImageType img1;
	ImageType img2;

	img1.read(path);
	img2.read(path_gt);

	PartitionType p1 = segmentation::to_partition<PartitionType>(img1);
	PartitionType p2 = segmentation::to_partition<PartitionType>(img2);

	std::cout << p1.max_label()+1 << " " << segmentation::segmentation_covering(p1,p2) << " " << segmentation::boundary_recall(p1,p2) << std::endl;
}
