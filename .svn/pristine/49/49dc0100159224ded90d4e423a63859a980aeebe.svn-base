// --------------------------------------------------------------
// Copyright (C)
// Universitat Politecnica de Catalunya (UPC) - Barcelona - Spain
// --------------------------------------------------------------
//!
//! \file trainer.cpp
//!

//
// FIRST: Main Definitions
//
// - The NAME of your tool
//   - This is mandatory
//   - Avoid the character '-', use always '_' 
// - The GROUP where your tool belong
//   - This is optional
//   - Comment the second definition to not group your tool
//
#define IMAGEPLUS_TOOL_CONFIG_NAME  trainer
#define IMAGEPLUS_TOOL_CONFIG_GROUP semantic

//
// SECOND: Include tool_config.hpp header 
//
// Note that it is mandatory to FIRST define the name (and group)
// of your tool, and LATER on include this header.
//
#include <imageplus/toolbox/tool_config.hpp>

#include <iostream>
#include <list>
#include <string>

#include <imageplus/semantic/trainer.hpp>

//
// This is not mandatory, but useful (in a tool!)
//
using namespace std;
using namespace imageplus;
using namespace semantic;


//
//
// From now on you should use the IMAGEPLUS_TOOL_CONFIG_* macros
// for a better configuration.
//
// We have two parts:
//
// (1) Fill up the configuration and information of your tool:
//
// - Brief description of your tool
// - Detailed descritption of your tool
// - Parameters Configuration: 
//   - Declararion of all your parameters
//   - Default values for the parameters
//   - Configuration: 
//     - Select which paramteres are options, which flags and which arguments
//     - Description for all the parameters
//     - Optional abreviatures for options and flags 
// - Call the "read" functions for all the parameters (DO NOT FORGET THIS!)
//
// (2) The code of "main" function of your tool
//
// You should use the IMAGEPLUS_TOOL_CONFIG_* macros in the following 
// order to do all the previous tasks: 
//
IMAGEPLUS_TOOL_CONFIG_BRIEF()
    
    "Trainer tool\n";

IMAGEPLUS_TOOL_CONFIG_DESCRIPTION()

    "This tool trains an SVM model for the given annotation   \n"+
    "and the ColorStructure classifier.                       \n"+
    "                                                         \n"+
    "Training results are saved in the current directory      \n"+
    "in the desired one if given as a parameter (results).    \n";


IMAGEPLUS_TOOL_CONFIG_PARAMETERS()

    //
    // Here you have to declare all your configuration parameters:
    // options, flags and arguments.

    // Your Options:
//	string type;
	string results;

	// ^ TAKEN FROM THE OLD "B_TRAINER" ^
    //Usage: B_TRAINER --annot [annotation file] --type [model type] --conf [config file] --results [results dir]
     
    // Your Flags:
    // (flags are only booleans!!)

    // Your Arguments
	string annot;
     

    
IMAGEPLUS_TOOL_CONFIG_DEFAULT_VALUES()

    //
    // Here you should assign default values to your parameters
    //
    // Note that vectors can be initialized with some values.
    //

    annot = "annotation.xml";
    results = ".";


IMAGEPLUS_TOOL_CONFIG_OPTIONS()

    //
    // Here you have to define your OPTIONS, with a description 
    // and an optional abreviature
    //

	IMAGEPLUS_TOOL_CONFIG_OPTION( results , "The output directory" );


IMAGEPLUS_TOOL_CONFIG_FLAGS()

    //
    // Here you have to define your FLAGS, with a description 
    // and an optional abreviature
    //



IMAGEPLUS_TOOL_CONFIG_ARGUMENTS()

    //
    // Here you have to define your ARGUMENTS with a description. 
    // You should put them in the DESIRED ORDER in the command-line
    //
    // Note that an argument that is a vector should be the last and no more
    // argument can be added later. Think: is impossible to parser arguments 
    // afters an unknown size vector!
    // If you need more than one vector, use "options" instead of arguments.
    //

	IMAGEPLUS_TOOL_CONFIG_ARGUMENT( annot , "Name of the input file with the annotation to use" );


IMAGEPLUS_TOOL_CONFIG_READ_PARAMETERS()

    //
    // Here you have to read all your parameters
    //
    // DO NOT FORGET THIS STEP!!
    //
        
    IMAGEPLUS_TOOL_CONFIG_READ( annot );
    IMAGEPLUS_TOOL_CONFIG_READ( results );
    
    
    

    
//
// This is the "main" function of your tool.
//
// You can access to all your parameters (options, flags, and arguments)
// with the "cfg" object (see the code.)
//
// Run the exemple with "--help" to see your configuration.
//
IMAGEPLUS_TOOL_CONFIG_MAIN()
{   
	cout << "TRAINER" << std::endl;

    cout << "Annotation file: " << cfg.annot   << endl;
    cout << "Output dir:      " << cfg.results << endl;

    Trainer trainer(cfg.annot, cfg.results);
    trainer.train();
    cout << "done!" << endl;
}


//
// This last line is mandatory!
//
IMAGEPLUS_TOOL_CONFIG_END()
