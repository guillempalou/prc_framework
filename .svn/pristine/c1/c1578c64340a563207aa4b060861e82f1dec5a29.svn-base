// --------------------------------------------------------------
// Copyright (C)
// Universitat Politecnica de Catalunya (UPC) - Barcelona - Spain
// --------------------------------------------------------------

//!
//!  \file camera_implementations.test
//!
//!  Tests for Camera Implementations Routines
//!

#include <imageplus/multiview/camera_implementations.hpp>
#include <imageplus/math/numeric/norms.hpp>


BOOST_AUTO_TEST_SUITE ( suite_camera_implementations );

using namespace imageplus;
using namespace imageplus::multiview;
using namespace std;

BOOST_AUTO_TEST_CASE ( test_cam_impl_image_CS_to_world_CS )
{
    Point2D image_centroid(353,313); 
    Camera cam;
    cam.read_parameters(string(TEST_DATA_PATH_R) + "/TCameraParameters_cam1_evaluation06.txt");
        
    Point3D world_point, ground_truth(9.05572, 19.2337, 230.688);
    world_point=image_coord_system_to_world_coord_system(cam, image_centroid);
    BOOST_CHECK(abs(world_point.x()-ground_truth.x())<0.01);
    BOOST_CHECK(abs(world_point.y()-ground_truth.y())<0.01);
    BOOST_CHECK(abs(world_point.z()-ground_truth.z())<0.01);   
}

BOOST_AUTO_TEST_CASE ( test_cam_impl_back_projected_ray )
{
    Point2D image_centroid(353,313); 
    Camera cam;
    cam.read_parameters(string(TEST_DATA_PATH_R) + "/TCameraParameters_cam1_evaluation06.txt");
        
    Point3D base_point, vdir, ground_truth(8.48043, 18.6471, 231.261);
    
   
    back_projected_ray(cam, image_centroid, base_point, vdir);
    BOOST_CHECK(abs(base_point.x()-ground_truth.x())<0.01);
    BOOST_CHECK(abs(base_point.y()-ground_truth.y())<0.01);
    BOOST_CHECK(abs(base_point.z()-ground_truth.z())<0.01);   
    
    BOOST_CHECK(abs(vdir[0] - 0.574487)<0.001);
    BOOST_CHECK(abs(vdir[1] - 0.585752)<0.001);
    BOOST_CHECK(abs(vdir[2] + 0.571716)<0.001);
    
    BOOST_CHECK_CLOSE(imageplus::math::numeric::norm(vdir),1.0,0.01);
}

BOOST_AUTO_TEST_CASE ( test_undistorter_with_world3d_distorsion_model )
{
    Camera cam;
    cam.read_parameters(string(TEST_DATA_PATH_R) + "/TCameraParameters_cam1_evaluation06.txt");
    
    Point2D distorted_point, undistorted_point;
    
    distorted_point.x()=150;
    distorted_point.y()=50;
    Point2D princPoint(cam.k()[2][0],cam.k()[2][1]);
    MultiArray<float64,1> focLength(2);
    focLength[0]=cam.k()[0][0];
    focLength[1]=cam.k()[1][1];
    
    Point2D correct_point(105.707, 0.170629);

    undistorted_point = undistorter(distorted_point, cam.distortion(), princPoint, focLength);
    BOOST_CHECK(abs(undistorted_point.x()-correct_point.x()) < 0.1 ); 
    BOOST_CHECK(abs(undistorted_point.y()-correct_point.y()) < 0.1 ); 
}

BOOST_AUTO_TEST_SUITE_END ();
