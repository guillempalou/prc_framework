// --------------------------------------------------------------
// Copyright (C)
// Universitat Politecnica de Catalunya (UPC) - Barcelona - Spain
// --------------------------------------------------------------

//!
//!  \file multiarray_statistics.cpp
//!
//!  Add brief description of the file here
//!

#include <imageplus/math/statistics/multiarray_statistics.hpp>

using namespace imageplus;
using namespace imageplus::math::statistics;
namespace ms = imageplus::math::statistics;

template<typename T>
MultiArray<float64,1> ms::mean(const MultiArray<T,2>& in, uint64 dim) throw (ImagePlusError)
{
    uint64 size_x = in.dims(0);
    uint64 size_y = in.dims(1);

    const T* init = in.data();

    uint64 out_size = (dim == 0) ? size_y : size_x;

    MultiArray<float64,1> mmean(out_size);

    switch (dim)
    {
        case 0:
            for (uint64 i = 0; i < size_y; i++)
            {
                mmean[i] = std::accumulate(init + i*size_x, init + i*size_x+size_x, static_cast<float64>(0.0))/(float64)size_x;
            }
            break;
        case 1:
            for (uint64 i = 0; i < size_y; i++)
            {
                for (uint64 j = 0; j < size_x; j++)
                {
                    mmean[j] += in[j][i];
                }
            }
            mmean /= (float64)size_y;
            break;
        default:
            throw ImagePlusError ("dim must be zero or one");
            break;
    }

    return mmean;
}



namespace imageplus
{
	namespace math
	{
		namespace statistics
		{
            template MultiArray<float64,1> mean (const MultiArray<uint8,2>&   in, uint64 dim) throw (ImagePlusError);
            template MultiArray<float64,1> mean (const MultiArray<int16,2>&   in, uint64 dim) throw (ImagePlusError);
            template MultiArray<float64,1> mean (const MultiArray<uint32,2>&  in, uint64 dim) throw (ImagePlusError);
            template MultiArray<float64,1> mean (const MultiArray<int32,2>&   in, uint64 dim) throw (ImagePlusError);
            template MultiArray<float64,1> mean (const MultiArray<uint64,2>&  in, uint64 dim) throw (ImagePlusError);
            template MultiArray<float64,1> mean (const MultiArray<int64,2>&   in, uint64 dim) throw (ImagePlusError);
            template MultiArray<float64,1> mean (const MultiArray<float32,2>& in, uint64 dim) throw (ImagePlusError);
            template MultiArray<float64,1> mean (const MultiArray<float64,2>& in, uint64 dim) throw (ImagePlusError);

        }
    }
}
