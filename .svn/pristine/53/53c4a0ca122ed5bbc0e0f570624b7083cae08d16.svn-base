// --------------------------------------------------------------
// Copyright (C)
// Universitat Politecnica de Catalunya (UPC) - Barcelona - Spain
// --------------------------------------------------------------


//!
//! \file naming_convention.hpp
//! 
//! Always use the same header for all hpp or cpp files
//! 

// You need to define a unique name for your file, replace <MODULENAME>
// and <FILENAME> with the corresponding names
#ifndef IMAGEPLUS_<MODULENAME>_<FILENAME>_HPP
#define IMAGEPLUS_CORE_MULTIARRAY_ARITHMETIC_HPP

// External includes
#include <iostream>

// ImagePlus includes (always use core.hpp)
#include <imageplus/core.hpp> 


//! 
//! \brief comment your defines like this 
//!
#define MAX(a,b) blah

//! or like this
#define IS_ERR(err) blah

//! 
//! \namespace modulename 
//! 
//! \brief also comment namespaces but only on ONE file in the module!!!!
//!
//! The namespace *MUST* correspond to the module name
//!
namespace modulename
{
    //! constant variables are uppercase. Must be always documented.
    const float64 MY_CONSTANT = 2.71;

    //!
    //! \brief document the enumerate
    //!
    enum PinStateType
    {
        PIN_OFF,
        PIN_ON
    };

    //! 
    //! \brief document your class
    //! 
    //! Please document your class as extensively as you can. 
    //!
    //! Classes have first word letter in uppercase. Use \tparam to document template parameters. 
    //! Use \headerfile to specify the header file that should be included to use this class. 
    //! Add name of the header file and how it should be used. See example below 
    //!
    //! \headerfile include/imageplus/core/naming_convention.hpp <core/naming_convention.hpp>
    //!
    //! \tparam T  : Document your template parameters
    //!
    //! \author Add author here 
    //!
    //! \date add date here
    //!
    template<typename T>
    class MyClass
    {

        // Respect the indenting (with spaces, not tabs)
        public:
            
            //! 
            //! \brief document you constructors
            //!
            MyClass();
            
            //!
            //! \brief and your destructors
            //!
            ~MyClass();
            
            //!
            //! \brief and basically every function of your class
            //!
            //! functions are implemented in the corresponding .cpp
            //! 
            //! \param[in]  var_input  : document your parameters, use_always_lowercase_for_names
            //! \param[out] var_output : Output parameters are defined as 'out'
            //!
            //! \exception ImageplusError : Document the exceptions. For example: "Exception is thrown when input images do not have same dimensions"
            //!
            void function(float64 var2) throw ImagePlusError();
            
            //! 
            //! \brief use always public methods to access private variables
            //!
            //! you can use references to write to private variables
            //!
            inline int32& var1();
            
        private:
            
            //! also document private variables
            int32 _var1;
            
            //! private variables start with '_' and are always lowercase
            float64 _var2;
            
    };

}
