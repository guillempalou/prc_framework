// --------------------------------------------------------------
// Copyright (C)
// Universitat Politecnica de Catalunya (UPC) - Barcelona - Spain
// --------------------------------------------------------------

/*!
 * \file flows_ptz_sf2.hpp
 */

#ifndef IMAGEPLUS_TOOLBOX_FLOWS_PTZ_SF2_HPP
#define IMAGEPLUS_TOOLBOX_FLOWS_PTZ_SF2_HPP


/*
 * Imageplus include
 */
#include <imageplus/core.hpp>
#include <imageplus/toolbox/camera_ptz.hpp>
#include <imageplus/toolbox/client_config_sf2.hpp>

namespace imageplus
{
namespace toolbox
{
    /*!
     * Wrapper function to send a CameraPTZ::Movement to a SF2 flow
     *
     * \param[in]     movement : the CameraPTZ::Movement to send
     * \param[in,out]     flow : the ImagePlusFlow to send the movement
     */
    void send_flow( const CameraPTZ::Movement& movement, ImagePlusFlow& flow)
    {
        flow.push_data(&movement, sizeof(CameraPTZ::Movement));
    }

    /*!
     * Wrapper function to receive a CameraPTZ::Movement from a SF2 flow
     *
     * \param[out]    movement : the CameraPTZ::Movement object to save the received data
     * \param[in,out]     flow : the ImagePlusFlow to receive the movement from
     */
    void receive_flow( CameraPTZ::Movement& movement, ImagePlusFlow& flow )
    {
        flow.pop_data(&movement);
    }

    /*!
     * Wrapper function to send a Point3D to a SF2 flow
     *
     * \param[in]      xyz : the Point3D to send
     * \param[in,out] flow : the ImagePlusFlow to send the point
     */
    void send_flow( const Point3D& xyz, ImagePlusFlow& flow)
    {
        flow.push_data(&xyz, sizeof(Point3D));
    }

    /*!
     * Wrapper function to receive a Point3D from a SF2 flow
     *
     * \param[out]     xyz : the Point3D object to save the received data
     * \param[in,out] flow : the ImagePlusFlow to receive the Point3D from
     */
    void receive_flow( Point3D& xyz, ImagePlusFlow& flow )
    {
        flow.pop_data(&xyz);
    }
} // ns toolbox
} // ns imageplus

#endif // IMAGEPLUS_TOOLBOX_FLOWS_PTZ_SF2_HPP
