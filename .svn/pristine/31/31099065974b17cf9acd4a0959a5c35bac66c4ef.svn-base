/*!
 * \example hello_calculate_descriptors.cpp
 *
 * This is an example of how to calculate descriptors
 * 
 * See the \ref descriptors "Getting Started Guide" for more information.
 */
#include <imageplus/core.hpp>

// Include the file where the definition of the descriptor is available
#include <imageplus/descriptors/geometry/area.hpp>
#include <imageplus/descriptors/color/color_statistics.hpp>

using namespace imageplus;

// Own namespace
using namespace descriptors;

void hello_calculate_descriptors( )
{
	/*  Recovering the same Partition of the previous example: */
    typedef RegionContour<Coord2D<int64> >  RegionType;  // Type of region we will work with

    /* This definition will be useful in this case*/
    typedef ImageRGB<uint8> InputType;
    
    /* The partition */
    ImagePartition<> im_part(3,3);
    im_part[0][0] = 1;     im_part[1][0] = 1;     im_part[2][0] = 2;
    im_part[0][1] = 1;     im_part[1][1] = 2;     im_part[2][1] = 2;
    im_part[0][2] = 3;     im_part[1][2] = 4;     im_part[2][2] = 5;
    
    std::cout << "Partition we are working with:" << std::endl;
    std::cout << im_part;
    
    Partition<RegionType> my_partition(im_part);
    RegionType& my_reg = my_partition[2];
    
    /* The image */
    InputType im(3,3);
    im(0) = 1;  im(1) = 2;  im(2) = 3;  im(2)[2][0] = 6; 
    
    /* Let us start computing two simple descriptors, such as area and color mean.
     * The recommended way to compute descriptors is as follows: */
    Area                 my_area = calc_descriptor(new Area()                , im, my_reg);
    ColorMean<InputType> my_mean = calc_descriptor(new ColorMean<InputType>(), im, my_reg);

    /* The function calc_descriptor makes use of the class CollaborativeDescriptors to compute and store
     * the descriptors to allow their reuse */
    
    /* We show the result */
    std::cout << "The area of region "       << my_reg.label() << " is: " << my_area << "." << std::endl;
    std::cout << "The color mean of region " << my_reg.label() << " is: " << my_mean << "." << std::endl;
    
    /* For further information about how to create a descriptor please refer to the following tutorial */
}


/*
 * 
 *  Expected output of the example
 * 
 * 

Partition we are working with:
Channel 0:
      1    1    2
      1    2    2
      3    4    5

The area of region 2 is: 3.
The color mean of region 2 is:       1    2    4  .

 
 * 
 * 
 */
