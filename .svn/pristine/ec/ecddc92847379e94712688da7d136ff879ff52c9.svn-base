/*
 * objects_and_parts_f.cpp
 *
 *  Created on: Mar 22, 2013
 *      Author: gpalou
 */

#include <imageplus/core/image_signal.hpp>
#include <imageplus/segmentation/visualization/false_color.hpp>
#include <imageplus/segmentation/partition/partition.hpp>
#include <imageplus/segmentation/measures/objects_and_parts.hpp>

using namespace imageplus;

#define uint64 imageplus::uint64
#define int64 imageplus::int64

typedef segmentation::Partition<int64,2> PartitionType;

int main(int argc, char *argv[]) {

	std::string partition_path = argv[1];

	ImageSignal<float64,3> part_img;
	part_img.read(partition_path);

	PartitionType partition = segmentation::to_partition<PartitionType>(part_img);

	uint64 sx = partition.size_x();
	uint64 sy = partition.size_y();
	std::vector<PartitionType> gts(argc-2,PartitionType(sx,sy));
	for (int i = 2; i < argc; i++) {
		ImageSignal<float64,3> part_img;
		part_img.read(argv[i]);

		gts[i-2] = segmentation::to_partition<PartitionType>(part_img);
	}

	segmentation::ObjectsAndPartsF<PartitionType> objects_and_parts(0.9,0.25,0.99,0.1);

	objects_and_parts.calculate(partition,gts);

	std::cout << objects_and_parts.precision() << " " << objects_and_parts.recall() << std::endl;
}
