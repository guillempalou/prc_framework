// --------------------------------------------------------------
// Copyright (C)
// Universitat Politecnica de Catalunya (UPC) - Barcelona - Spain
// --------------------------------------------------------------

//!
//!  \file annotatedsemanticclass.hpp
//!
//!  AnnotatedSemanticClass
//!


#ifndef IMAGEPLUS_SEMANTIC_ANNOTATEDSEMANTICCLASS_HPP
#define IMAGEPLUS_SEMANTIC_ANNOTATEDSEMANTICCLASS_HPP


#include <imageplus/semantic/instance.hpp>


namespace imageplus {
	namespace semantic {

		//!
		//! \brief Contains the annotation of a semantic class.
		//!
		//! This class is used to represent the annotation of a semantic
		//! class, which is formed by a set of annotated instances for each
		//! instance type defined in Instance::InstanceType enum.
		//!
		//! \author Pau Haro Negre
		//!
		//! \date 10-6-2011
		//!
		class AnnotatedSemanticClass
		{
		public:

			friend class ReadWriteAnnotation;

			//! Type of the instances container
			typedef std::list<Instance> AnnotationInstancesType;


            //! \brief Default constructor
			AnnotatedSemanticClass() {}

            //! \brief Constructor receiving a semantic class id.
            //!
            //! \param[in] semantic_class Id of the semantic class
            explicit AnnotatedSemanticClass(uint32 semantic_class)
            	: _semantic_class(semantic_class) {}

            //! \brief Destructor
            ~AnnotatedSemanticClass() {}


            //! Add instance of the given type.
            //!
            //! \param[in] instance Instance to add
            //! \param[in] type     Type of the instance
            void add_instance(Instance instance, Instance::InstanceType type);

            //! Get all instances of the given type.
            //!
            //! \param[in] type Instance type
            //!
            //! \return List of instances of the given type
            const AnnotationInstancesType& get_instances(Instance::InstanceType type) const;


    		friend std::ostream& operator<<(std::ostream &os, const AnnotatedSemanticClass& asc);
            
		private:
			//! Semantic class id
			uint32 _semantic_class;
			
			//! Lists of instances of each instance type (array of lists)
			AnnotationInstancesType _instances[Instance::NUM_INSTANCE_TYPES];

		};

		//! Output a representation of the given AnnotatedSemanticClass to an ostream.
        //!
        //! \param[in,out] os  Output stream where the representation will be appended
        //! \param[in]     asc %Instance of AnnotatedSemanticClass class to write to the stream
		//!
		//! \return Description of the AnnotatedSemanticClass is appended to the given ostream.
		std::ostream& operator<<(std::ostream &os, const AnnotatedSemanticClass& asc);
	}
}

#endif //IMAGEPLUS_SEMANTIC_ANNOTATEDSEMANTICCLASS_HPP
