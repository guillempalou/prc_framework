// --------------------------------------------------------------
// Copyright (C)
// Universitat Politecnica de Catalunya (UPC) - Barcelona - Spain
// --------------------------------------------------------------

//!
//!  \file eigenvalues.test
//!

#include <iostream>
#include <imageplus/math/numeric/eigenvalues.hpp>

BOOST_AUTO_TEST_SUITE ( EigenSuite );

using namespace imageplus;
using namespace imageplus::math::numeric;


BOOST_AUTO_TEST_CASE( Eigenvalues_test)
{
    uint64 size = 4;
    
    MultiArray<float64,2> A(size,size);

    A[0][0] = 1;
    A[1][0] = 2;
    A[2][0] = 3;
    A[3][0] = 4;
    A[0][1] = 4;
    A[1][1] = 5;
    A[2][1] = 5;
    A[3][1] = 6;
    A[0][2] = 3;
    A[1][2] = 5;
    A[2][2] = 7;
    A[3][2] = 7;
    A[0][3] = 4;
    A[1][3] = 9;
    A[2][3] = 7;
    A[3][3] = 1;



    Eigenvalues<float64> ei(A);

    MultiArray<float64,1> rev = ei.real_eigenvalues();
    MultiArray<float64,1> iev = ei.imag_eigenvalues();
    MultiArray<float64,2> evv = ei.eigenvectors();

    BOOST_CHECK_CLOSE(rev[0], 19.179427157686238, 1e-5);
    BOOST_CHECK_CLOSE(rev[1], -0.63217149503664727, 1e-5);
    BOOST_CHECK_CLOSE(rev[2], 0.84175064272304501, 1e-5);
    BOOST_CHECK_CLOSE(rev[3],  -5.3890063053726376, 1e-5);


    BOOST_CHECK_CLOSE(evv[0][0], static_cast<float64>(0.27582354219648664), 1e-5);
    BOOST_CHECK_CLOSE(evv[0][1], static_cast<float64>(0.519376), 1e-5);
    BOOST_CHECK_CLOSE(evv[0][2], static_cast<float64>(0.59563542070098352), 1e-5);
    BOOST_CHECK_CLOSE(evv[0][3], static_cast<float64>(0.54716391223557692), 1e-5);
    BOOST_CHECK_CLOSE(evv[1][0], static_cast<float64>(0.77320087963960193), 1e-5);
    BOOST_CHECK_CLOSE(evv[1][1], static_cast<float64>(-0.50769056220626341), 1e-5);
    BOOST_CHECK_CLOSE(evv[1][2], static_cast<float64>(0.27303952221515798), 1e-5);
    BOOST_CHECK_CLOSE(evv[1][3], static_cast<float64>(-0.26643346947949187), 1e-5);
    BOOST_CHECK_CLOSE(evv[2][0], static_cast<float64>(0.1187464988787893), 1e-5);
    BOOST_CHECK_CLOSE(evv[2][1], static_cast<float64>(-0.80842465986559686), 1e-5);
    BOOST_CHECK_CLOSE(evv[2][2], static_cast<float64>(0.97911736574139485), 1e-5);
    BOOST_CHECK_CLOSE(evv[2][3], static_cast<float64>(-0.33482358365486198), 1e-5);
    BOOST_CHECK_CLOSE(evv[3][0], static_cast<float64>(-0.36204024045176397), 1e-5);
    BOOST_CHECK_CLOSE(evv[3][1], static_cast<float64>(-0.24904342137738275), 1e-5);
    BOOST_CHECK_CLOSE(evv[3][2], static_cast<float64>(-0.3625433917826178), 1e-5);
    BOOST_CHECK_CLOSE(evv[3][3], static_cast<float64>(0.97469859928689151), 1e-5);


}    
BOOST_AUTO_TEST_SUITE_END ();
