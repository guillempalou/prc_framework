// --------------------------------------------------------------
// Copyright (C)
// Universitat Politecnica de Catalunya (UPC) - Barcelona - Spain
// --------------------------------------------------------------

//! 
//! \file observation.test
//!
//! Tests for Observation class
//!
#include <imageplus/semantic/observation.hpp>


BOOST_AUTO_TEST_SUITE ( Semantic_Observation_Suite );

using namespace imageplus;
using namespace imageplus::semantic;
using namespace std;

BOOST_AUTO_TEST_CASE( observation_test )
{
	Observation observation;
	
	// check for non-existent feature vector
	BOOST_CHECK_THROW(observation.get_vd_featurevector("ColorStructure"), ImagePlusError);

	// add a feature vector and check it is included
	Observation::FeatureVector fv(10);
	fv = 0;
	BOOST_CHECK_NO_THROW(observation.add_vd_featurevector("ColorStructure", fv));

	BOOST_CHECK(observation.includes_vd_featurevector("ColorStructure"));
	BOOST_CHECK_NO_THROW(observation.get_vd_featurevector("ColorStructure"));
	BOOST_CHECK_EQUAL(observation.get_vd_featurevector("ColorStructure"), fv);

	// check for duplicates
	BOOST_CHECK_THROW(observation.add_vd_featurevector("ColorStructure", fv), ImagePlusError);
}

BOOST_AUTO_TEST_CASE( observation_test_cout )
{
	Observation observation;

	// add the feature vectors for two visual descriptors
	Observation::FeatureVector fv1(10), fv2(5);
	fv1 = 0; fv2 = 0;
	observation.add_vd_featurevector("ColorStructure", fv1);
	observation.add_vd_featurevector("ColorLayout", fv2);

	stringstream expected;
	expected << "observation with feature vectors for visual descriptors:";
	expected << " ColorLayout,";
	expected << " ColorStructure,";

	stringstream obtained;
	obtained << observation;

	BOOST_CHECK_EQUAL(obtained.str(), expected.str());
}


BOOST_AUTO_TEST_SUITE_END ();
