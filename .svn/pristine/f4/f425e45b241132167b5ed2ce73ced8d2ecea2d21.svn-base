// --------------------------------------------------------------
// Copyright (C)
// Universitat Politecnica de Catalunya (UPC) - Barcelona - Spain
// --------------------------------------------------------------

/*!
 * \file multiview_auxiliar.test
 */

#include <multiview_auxiliar.hpp>
#include <imageplus/multiview.hpp>

#include <imageplus/math/numeric/norms.hpp>


BOOST_AUTO_TEST_SUITE ( MultiViewAuxiliarSuite );

using namespace imageplus;
using namespace imageplus::multiview;
using namespace imageplus::math::numeric;
using namespace std;

BOOST_AUTO_TEST_CASE ( min_distance_error_point )
{
    //Creating general framework for the backprojections en error computations
     Point2D image_centroid(353,313); //SoftImage tested case
     
     MultiView<Point2D> mv_points(5);
     MultiView<uint8>   is_in_cam(5);
     
     mv_points.cam(0).read_parameters(string(TEST_DATA_PATH_R) + "/TCameraParameters_cam1_evaluation06.txt");
     mv_points.cam(1).read_parameters(string(TEST_DATA_PATH_R) + "/TCameraParameters_cam2_evaluation06.txt");
     mv_points.cam(2).read_parameters(string(TEST_DATA_PATH_R) + "/TCameraParameters_cam3_evaluation06.txt");
     mv_points.cam(3).read_parameters(string(TEST_DATA_PATH_R) + "/TCameraParameters_cam4_evaluation06.txt");
     mv_points.cam(4).read_parameters(string(TEST_DATA_PATH_R) + "/TCameraParameters_cam5_evaluation06.txt");
     
     Point3D world_point(150,200,100), final_point;
     
     
     //Ideal case: Project a point and backproject
     for (uint8 i=0; i<5; i++)
     {
         fast_world2image( world_point, mv_points.cam(i), mv_points.view(i) );
         is_in_cam(i)=1;
     }
     
    final_point=min_ray_distance_error_3d_point(mv_points, is_in_cam);
    BOOST_CHECK(norm((final_point-world_point))<1);
}

BOOST_AUTO_TEST_CASE ( min_distance_error_point_outlier_rejection )
{
    //Creating general framework for the backprojections en error computations
     Point2D image_centroid(353,313); //SoftImage tested case
     
     MultiView<Point2D> mv_points(5);
     MultiView<uint8>   is_in_cam(5);
     
     mv_points.cam(0).read_parameters(string(TEST_DATA_PATH_R) + "/TCameraParameters_cam1_evaluation06.txt");
     mv_points.cam(1).read_parameters(string(TEST_DATA_PATH_R) + "/TCameraParameters_cam2_evaluation06.txt");
     mv_points.cam(2).read_parameters(string(TEST_DATA_PATH_R) + "/TCameraParameters_cam3_evaluation06.txt");
     mv_points.cam(3).read_parameters(string(TEST_DATA_PATH_R) + "/TCameraParameters_cam4_evaluation06.txt");
     mv_points.cam(4).read_parameters(string(TEST_DATA_PATH_R) + "/TCameraParameters_cam5_evaluation06.txt");
     
     Point3D world_point(150,200,100), final_point;
     
     
     //Ideal case: Project a point and backproject
     for (uint8 i=0; i<5; i++)
     {
         fast_world2image( world_point, mv_points.cam(i), mv_points.view(i) );
         is_in_cam(i)=1;
     }
    final_point=min_ray_distance_error_3d_point_outlier_rej(mv_points, is_in_cam, 0.2);
    BOOST_CHECK((norm((final_point-world_point)))<0.2);
}

BOOST_AUTO_TEST_SUITE_END ();
