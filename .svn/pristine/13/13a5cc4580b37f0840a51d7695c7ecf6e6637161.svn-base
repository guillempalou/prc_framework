// Copyright (C)
// Universitat Politecnica de Catalunya (UPC) - Barcelona - Spain
// --------------------------------------------------------------

//! 
//! \file readvolume.test
//!
//! Tests for class ReadVolume 
//!

#include <iostream>

#include <imageplus/core.hpp>
#include <imageplus/io/readroom.hpp>
#include <imageplus/io/writeroom.hpp>
#include <imageplus/compress/rle.hpp>

BOOST_AUTO_TEST_SUITE ( WriteRoomSuite );

using namespace std;
using namespace imageplus;
using namespace imageplus::io;
using namespace imageplus::compress;

typedef boost::mpl::list<uint8,int64,float64> DataTypes;

BOOST_AUTO_TEST_CASE( WriteRoomGeneral)
{

	ReadRoom rvol, rvol2;
	WriteRoom wr;
	Room<uint8,1> vol,vol2;
	
	rvol.open(string(TEST_DATA_PATH_R) + "/room_input.rle");
	wr.open(string(TEST_DATA_PATH_W) + "/room_output.rle");
	rvol2.open(string(TEST_DATA_PATH_W) + "/room_output.rle");
	
	rvol >> vol;
	wr << vol;
	rvol2 >> vol2;
		
	BOOST_CHECK_EQUAL(vol.size_x(),vol2.size_x());
	BOOST_CHECK_EQUAL(vol.size_y(),vol2.size_y());
	BOOST_CHECK_EQUAL(vol.size_z(),vol2.size_z());
	BOOST_CHECK_EQUAL(vol.voxel_size(),vol2.voxel_size());
	BOOST_CHECK_EQUAL(vol.offset().x(),vol2.offset().x());
	BOOST_CHECK_EQUAL(vol.offset().y(),vol2.offset().y());
	BOOST_CHECK_EQUAL(vol.offset().z(),vol2.offset().z());
	BOOST_CHECK_EQUAL(vol.volume().size_x(),vol2.volume().size_x());
	BOOST_CHECK_EQUAL(vol.volume().size_y(),vol2.volume().size_y());
	BOOST_CHECK_EQUAL(vol.volume().size_z(),vol2.volume().size_z());
	
}

typedef boost::mpl::list<uint8, int64,float64> DataTypes2;
BOOST_AUTO_TEST_CASE_TEMPLATE( ReadVolumeException, T, DataTypes2 )
{
	ReadRoom rvol;
	Room<T,1> vol;
	
	BOOST_CHECK_THROW(rvol.open(string(TEST_DATA_PATH_R) + "/this_file_never_existed.rle"),ImagePlusFileNotFound);	
	
}

BOOST_AUTO_TEST_SUITE_END ();
