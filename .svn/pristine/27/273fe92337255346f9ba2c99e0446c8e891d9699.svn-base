// --------------------------------------------------------------
// Copyright (C)
// Universitat Politecnica de Catalunya (UPC) - Barcelona - Spain
// --------------------------------------------------------------

//!
//!  \file imagelbp.cpp
//!
//!  Implementation for ImageLBP class
//!

#include <imageplus/core/imagelbp.hpp>

using namespace imageplus;


ImageLBP::ImageLBP()
        : Image<uint64,1>()
{
}


ImageLBP::ImageLBP(uint64 x, uint64 y)
        : Image<uint64,1>(x,y)
{
}


ImageLBP::ImageLBP(const ImaVol<uint64,1,2>& copy)
        : Image<uint64,1>(copy)
{
}


ImageLBP::ImageLBP(const Image<uint64,1>& copy)
        : Image<uint64,1>(copy)
{
}


ImageLBP::ImageLBP(const ImageLBP& copy)
        : Image<uint64,1>(copy)
{
}

ImageLBP::ImageLBP(const std::vector< std::vector<uint64> >& dims)
        : Image<uint64,1>(dims)
{
}


ImageLBP::~ImageLBP()
{
}

const ImageLBP& ImageLBP::operator=(const ImaVol<uint64,1,2>& copy)
{
    (*this).Image<uint64,1>::operator=( copy );

    return *this;
}

const ImageLBP& ImageLBP::operator=(const Image<uint64,1>& copy)
{
    (*this).Image<uint64,1>::operator=( copy );

    return *this;
}

const ImageLBP& ImageLBP::operator=(const ImageLBP& copy)
{
    (*this).Image<uint64,1>::operator=( copy );

    return *this;
}


const uint64& ImageLBP::operator=(const uint64& val)
{
    (*this).Image<uint64,1>::operator=( val );

    return val;
}


