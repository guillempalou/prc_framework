// --------------------------------------------------------------
// Copyright (C)
// Universitat Politecnica de Catalunya (UPC) - Barcelona - Spain
// --------------------------------------------------------------

/*!
 * \file fill_regions.hpp
 *
 * Methods for region-based texture coding
 */

#ifndef IMAGEPLUS_CODING_TEXTURE_FILL_REGIONS_HPP
#define IMAGEPLUS_CODING_TEXTURE_FILL_REGIONS_HPP

#include <imageplus/core.hpp>
#include <imageplus/coding/texture/texture_codec.hpp>
#include <imageplus/coding/texture/texture_types.hpp>

namespace imageplus 
{
namespace coding
{
namespace texture
{
    //! To define a polynomial model
    enum TextureModel
    {
        MODEL_POLY0,       //!< Zero order polynomial
        MODEL_POLY1,       //!< Order 1 polynomial
        MODEL_POLY2,       //!< Order 2 polynomial
        MODEL_SQRT_ENERGY,
        MODEL_MINIMUM,
        MODEL_MAXIMUM
    };

    //!
    //! \brief Fills regions with pixels based on a texture model
    //!
    //!   The regions having a label equal to zero are not processed
    //!
    //! \param[in] ori   : Image to be processed
    //! \param[in] label : Parition of image ori
    //! \param[in] model : Texture model
    //! \param[in] range_max_val: max value for image pixels
    //!
    //! \return filled image
    //!
    //! \author Josep Ramon Morros - 2008-06 - Creation
    //!
    template< typename    image_type,
              std::size_t num_channels,
              typename    partition_type >
    Image<image_type,num_channels> fill_regions( const Image<image_type,num_channels>& ori,
                                                 const ImagePartition<partition_type>& label,
                                                 TextureModel                          model,
                                                 image_type                            range_max_val = 255 )
                                                 throw (ImagePlusError);
} // ns texture
} // ns coding
} // ns imageplus

#endif // IMAGEPLUS_CODING_TEXTURE_FILL_REGIONS_HPP
