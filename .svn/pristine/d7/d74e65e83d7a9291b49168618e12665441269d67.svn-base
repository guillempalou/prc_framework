// --------------------------------------------------------------
// Copyright (C)
// Universitat Politecnica de Catalunya (UPC) - Barcelona - Spain
// --------------------------------------------------------------

//!
//!  \file k_means test
//!
//!  Tests for the math operations
//!

#include <imageplus/math/statistics/k_means.hpp>

BOOST_AUTO_TEST_SUITE ( k_means );

using namespace imageplus;
using namespace imageplus::math;
using namespace imageplus::math::statistics;


BOOST_AUTO_TEST_CASE( test_k_means )
{
	uint64 D = 3;
	uint64 N = 1000;
	uint64 K = 4;

	std::vector<Vector> points(N*K);

	std::vector<Vector> centers(K);

	for (uint64 k = 0; k < K; k++) {
		Vector c = 100*(k+1)*(Vector::Random(D));
		centers[k] = c;
		for (uint64 i = 0; i < N; i++) {
			Vector x = c + 5*Vector::Random(D);
			points[i+k*N] = x;
		}
	}

	KMeansParameters parameters;

	parameters.max_steps = 10000;
	parameters.min_change = 1e-6;
	KMeans<> k_means(parameters);

	k_means.calculate(points,K);

	std::vector<Vector> centers_estimated = k_means.centers();

	for (uint64 i = 0; i < K; i++) {
		float64 e_min = 1e200;
		for (uint64 k = 0; k < K; k++) {
			float64 e = (centers[i]-centers_estimated[k]).norm();
			if (e < e_min) e_min = e;
		}
		BOOST_CHECK(e_min < 1);
	}

}

BOOST_AUTO_TEST_SUITE_END ();
