// --------------------------------------------------------------
// Copyright (C)
// Universitat Politecnica de Catalunya (UPC) - Barcelona - Spain
// --------------------------------------------------------------


#include <imageplus/core/imageyuv422.hpp>


BOOST_AUTO_TEST_SUITE ( ImageYUV422Suite );

using namespace imageplus;

typedef boost::mpl::list<uint8,int64,float64> ImageTypes;



BOOST_AUTO_TEST_CASE_TEMPLATE( ImageYUV422_Constructor_Resize, T, ImageTypes )
{   
    
    ImageYUV422<T> im(50, 40);
    
    BOOST_CHECK_EQUAL( im.size_x(), size_type(50) );
    BOOST_CHECK_EQUAL( im.size_y(), size_type(40) );

    BOOST_CHECK_EQUAL( im.dims().at(0).at(0),  uint64(50) );
    BOOST_CHECK_EQUAL( im.dims().at(0).at(1),  uint64(40) );
    BOOST_CHECK_EQUAL( im.dims().at(1).at(0),  uint64(25) );
    BOOST_CHECK_EQUAL( im.dims().at(1).at(1),  uint64(40) );
    BOOST_CHECK_EQUAL( im.dims().at(2).at(0),  uint64(25) );
    BOOST_CHECK_EQUAL( im.dims().at(2).at(1),  uint64(40) );
    
    
    // Resize for ImageYUV422 with (width, height)
    im.resize(10,20);

    BOOST_CHECK_EQUAL( im.size_x(), size_type(10) );
    BOOST_CHECK_EQUAL( im.size_y(), size_type(20) );

    BOOST_CHECK_EQUAL( im.dims().at(0).at(0),  uint64(10) );
    BOOST_CHECK_EQUAL( im.dims().at(0).at(1),  uint64(20) );
    BOOST_CHECK_EQUAL( im.dims().at(1).at(0),  uint64(5)  );
    BOOST_CHECK_EQUAL( im.dims().at(1).at(1),  uint64(20) );
    BOOST_CHECK_EQUAL( im.dims().at(2).at(0),  uint64(5)  );
    BOOST_CHECK_EQUAL( im.dims().at(2).at(1),  uint64(20) );

    
    // Resize for ImageYUV422 with vector of dimensions
    std::vector< std::vector<uint64> > dims;
    std::vector<uint64> temp_dims;
    temp_dims.push_back(40);
    temp_dims.push_back(30);
    dims.push_back(temp_dims);

    temp_dims.resize(0);
    temp_dims.push_back(20);
    temp_dims.push_back(30);
    dims.push_back(temp_dims);
    dims.push_back(temp_dims);    

    im.resize(dims);

    
    BOOST_CHECK_EQUAL( im.size_x(), size_type(40) );
    BOOST_CHECK_EQUAL( im.size_y(), size_type(30) );

    BOOST_CHECK_EQUAL( im.dims().at(0).at(0),  uint64(40) );
    BOOST_CHECK_EQUAL( im.dims().at(0).at(1),  uint64(30) );
    BOOST_CHECK_EQUAL( im.dims().at(1).at(0),  uint64(20) );
    BOOST_CHECK_EQUAL( im.dims().at(1).at(1),  uint64(30) );
    BOOST_CHECK_EQUAL( im.dims().at(2).at(0),  uint64(20) );
    BOOST_CHECK_EQUAL( im.dims().at(2).at(1),  uint64(30) );
}


BOOST_AUTO_TEST_SUITE_END ();
