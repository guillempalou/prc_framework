// --------------------------------------------------------------
// Copyright (C)
// Universitat Politecnica de Catalunya (UPC) - Barcelona - Spain
// --------------------------------------------------------------

//!
//!  \file trainset.hpp
//!
//!  TrainSet
//!
//!  Contains a set of observations which are used as the input of a classifier trainer.
//!


#ifndef IMAGEPLUS_SEMANTIC_TRAIN_SET_HPP
#define IMAGEPLUS_SEMANTIC_TRAIN_SET_HPP

#include <iostream>

#include <imageplus/semantic/instance.hpp>
#include <imageplus/semantic/observation.hpp>

namespace imageplus {
	namespace semantic {

		//!
		//! \brief Contains a set of observations which are used as the input
		//! of a classifier trainer.
		//!
		//! This class is used to represent a train set, which is formed by a
		//! set of observations for each instance type defined in
		//! Instance::InstanceType enum.
		//!
		//! \author Pau Haro Negre
		//!
		//! \date 10-6-2011
		//!
		class TrainSet
		{
		public:

			//! Type of the observations container
			typedef std::list<Observation> ObservationsType;


            //! \brief Default constructor
			TrainSet() {};

            //! \brief Destructor
            ~TrainSet() {};


            //! Add observation of the given type.
            //!
            //! \param[in] observation Observation to add
            //! \param[in] type        Type of the observation
            void add_observation(Observation observation, Instance::InstanceType type);

            //! Get all observations of the given type.
            //!
            //! \param[in] type Observation type
            //!
            //! \return List of instances of the given type
            const ObservationsType& get_observations(Instance::InstanceType type) const;


    		friend std::ostream& operator<<(std::ostream &os, const TrainSet& ts);

		private:
			//! Lists of observations of each instance type (array of lists)
    		ObservationsType _observations[Instance::NUM_INSTANCE_TYPES];
		};

		//! Output a representation of the given TrainSet to an ostream.
        //!
        //! \param[in,out] os Output stream where the representation will be appended
        //! \param[in]     ts %Instance of TrainSet class to write to the stream
		//!
		//! \return Description of the TrainSet is appended to the given ostream.
		std::ostream& operator<<(std::ostream &os, const TrainSet& ts);
	}
}

#endif //IMAGEPLUS_SEMANTIC_TRAIN_SET_HPP
