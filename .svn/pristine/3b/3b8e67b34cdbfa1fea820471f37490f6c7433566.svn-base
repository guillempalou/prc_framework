/*
 * fundamental_matrix_test.cpp
 *
 *  Created on: May 16, 2013
 *      Author: gpalou
 */

#include <imageplus/monocular_depth/structure_from_motion/fundamental_matrix.hpp>
#include <iostream>

using namespace imageplus;
using namespace monocular_depth;

int main() {

	int N = 15;

	math::Matrix p1(N,2);
	math::Matrix p2(N,2);


	p1 << 245.77,169.57, 248.66,105.82, 263.39,182.45, 251.11,146.54, 249.88,197.99, 287.57,137.11, 240.93,113.15, 206.84,171.57, 224.95,170.34, 231.47,170.21, 257.55,124.43, 264.71,176.16, 227.67,127.05, 246.01,113.26, 244.15,154.41;
	p2 << 267.07,172.34, 252.92,105.02, 254.22,190.25, 284.33,145.1,  236.82,190.63, 220.04,135.11, 255.9,114.37,  259.09,165.9, 241.73,164.27, 258.62,168.3, 277.83,112.98, 219.62,170.46, 262.91,129.03, 250.93,114.5, 287.09,155.89;

	std::cout << "--------------------" << std::endl;
	std::cout << p1.transpose() << std::endl;
	std::cout << "--------------------" << std::endl;
	std::cout << p2.transpose() << std::endl;
	std::cout << "--------------------" << std::endl;
	std::cout << "Finding fundamental matrix " << std::endl;
	math::Matrix F = estimate_fundamental_matrix(p1,p2);

	std::cout << "Fundamental matrix: " << std::endl;
	std::cout << F << std::endl;
	std::cout << "--------------------" << std::endl;

	//calculate the error
	math::Matrix p1_hom(N,3);
	math::Matrix p2_hom(N,3);

	p1_hom.block(0,0,N,2) = p1;
	p2_hom.block(0,0,N,2) = p2;

	p1_hom.col(2).fill(1);
	p2_hom.col(2).fill(1);

	std::cout << p1_hom << std::endl;
	std::cout << p2_hom << std::endl;

	std::cout << "Average error " << (p2_hom*F*p1_hom.transpose()).diagonal().mean() << std::endl;
}
