// --------------------------------------------------------------
// Copyright (C)
// Universitat Politecnica de Catalunya (UPC) - Barcelona - Spain
// --------------------------------------------------------------

//!
//!  \file integral_image.hpp
//!
//!  Add brief description of the file here
//!

#ifndef IMAGEPLUS_TRANSFORMS_INTEGRAL_IMAGE_HPP
#define IMAGEPLUS_TRANSFORMS_INTEGRAL_IMAGE_HPP


#include <imageplus/core.hpp>


namespace imageplus
{
    namespace math
    {
        //!
        //! \namespace imageplus::math::transforms
        //!
        //! \brief Functions for all kind of transforms (DFT, DCT, PCA, ...)
        //!
        namespace transforms
        {
            //!
            //! \brief Compute integral image
            //!
            //! Computes the integral image of an image. An integral image I(x,y) is 
            //! an intermediate representation for the image and contains the sum of gray 
            //! scale pixel values of image N with height y and width x, i.e. \n \n
            //! \f$ I(x,y) = \displaystyle\sum_{x'=0}^x \displaystyle\sum_{y'=0}^y N(x',y') \f$  \n \n
            //! The integral image is computed recursively, by the formulas: \n
            //! \f$ I(x,y) = I(x,y-1) + I(x-1,y) + N(x,y) - I(x-1,y-1) \f$ 
            //! with \f$ I(-1,y) = I(x,-1) = I(-1,-1) = 0 \f$\n
            //! therefore requiring only one scan over the input data. This intermediate representation I(x,y)
            //! allows the computation of a rectangle feature value at (x,y) with height and width (h,w) 
            //! using four references:\n\n
            //! \f$ F(x,y,h,w) =  I(x,y) + I(x+w,y+h) - I(x,y+h) - I(x+w,y) \f$
            //!
            //! \tparam T1: Type of the input data
            //! \tparam T2: Type of the output data (only instantiated for int64 and float64)
            //!
            //! \param[in] ma: Input image
            //! 
            //! \return The integral image as a multiarray
            //!
            //! \author Josep Ramon Morros <ramon.morros@upc.edu>
            //!
            //! \date 14-3-2008
            //!
            template<typename T2, typename T1>
            MultiArray<T2,2> integral_image (const MultiArray<T1,2>& ma);
                    
    
            //!
            //! \brief Compute integral image
            //!
            //! Computes the integral image of the squares of the elements of an image.  I(x,y) is 
            //! an intermediate representation for the image and contains the sum of squared gray 
            //! scale pixel values of image N with height y and width x, i.e. \n \n
            //! \f$ I(x,y) = \displaystyle\sum_{x'=0}^x \displaystyle\sum_{y'=0}^y N(x',y')^2 \f$  \n
            //!
            //! \tparam T1: The type of the input data
            //! \tparam T2: Type of the output data (only instantiated for int64 and float64)
            //!
            //! \param[in] ma: Input image
            //! 
            //! \return The integral image of the squares of the elements as a multiarray
            //!
            //! \author Josep Ramon Morros <ramon.morros@upc.edu>
            //!
            //! \date 14-3-2008
            //!
            template<typename T2, typename T1>
            MultiArray<T2,2> sq_integral_image (const MultiArray<T1,2>& ma);
        }
    }
}


#endif // IMAGEPLUS_TRANSFORMS_INTEGRAL_IMAGE_HPP
