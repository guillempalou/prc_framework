// --------------------------------------------------------------
// Copyright (C)
// Universitat Politecnica de Catalunya (UPC) - Barcelona - Spain
// --------------------------------------------------------------

//! 
//! \file annotation.test
//!
//! Tests for Annotation class
//!
#include <imageplus/semantic/annotatedsemanticclass.hpp>
#include <imageplus/semantic/annotation.hpp>
#include <imageplus/semantic/instance.hpp>
#include <imageplus/semantic/ontology.hpp>


BOOST_AUTO_TEST_SUITE ( Semantic_Annotation_Suite );

using namespace imageplus;
using namespace imageplus::semantic;
using namespace std;

BOOST_AUTO_TEST_CASE( annotation_test )
{
	Annotation annotation;

	// check exceptions when a given semantic class is not in the ontology
	BOOST_CHECK_THROW(annotation.annotate(1), ImagePlusError);
	BOOST_CHECK_THROW(annotation.get_annotated_semantic_class(1), ImagePlusError);

	// add an ontology
	Ontology ontology;
	ontology.add_semantic_class(1, "Anchor");
	ontology.add_semantic_class(2, "Face");
	ontology.add_semantic_class(3, "Weather");
	annotation.set_ontology(ontology);

	// check results when a given semantic class is not annotated
	BOOST_CHECK_THROW(annotation.get_annotated_semantic_class(1), ImagePlusError);
	BOOST_CHECK(!annotation.semantic_class_is_annotated(1));

	// annotate semantic class 2
	AnnotatedSemanticClass& asc = annotation.annotate(2);
	BOOST_CHECK(annotation.semantic_class_is_annotated(2));

	// add 3 positive instances
	asc.add_instance(
		Instance("SegmentInstance1", "file:/path/to/0000001-vd.xml", 8,
			1, list<string>()),
		Instance::POSITIVE);
	asc.add_instance(
		Instance("SegmentInstance2", "file:/path/to/0000002-vd.xml", 8,
			1, list<string>()),
		Instance::POSITIVE);
	asc.add_instance(
		Instance("SegmentInstance3", "file:/path/to/0000003-vd.xml", 8,
			1, list<string>()),
		Instance::POSITIVE);

	// add 1 neutral instance
	asc.add_instance(
		Instance("SegmentInstance4", "file:/path/to/0000004-vd.xml", 8,
			1, list<string>()),
		Instance::NEUTRAL);

	// add 2 negative instances
	asc.add_instance(
		Instance("SegmentInstance5", "file:/path/to/0000005-vd.xml", 8,
			1, list<string>()),
		Instance::NEGATIVE);
	asc.add_instance(
		Instance("SegmentInstance6", "file:/path/to/0000006-vd.xml", 8,
			1, list<string>()),
		Instance::NEGATIVE);

	// check that the annotated values for semantic class 2 can be retrieved
	BOOST_REQUIRE(annotation.semantic_class_is_annotated(2));
	AnnotatedSemanticClass asc2 = annotation.get_annotated_semantic_class(2);
	BOOST_CHECK(asc2.get_instances(Instance::POSITIVE).size() == 3);
	BOOST_CHECK(asc2.get_instances(Instance::NEUTRAL).size()  == 1);
	BOOST_CHECK(asc2.get_instances(Instance::NEGATIVE).size() == 2);
}

BOOST_AUTO_TEST_CASE( annotation_test_iterators )
{
	Ontology ontology;
	ontology.add_semantic_class(1, "Anchor");
	ontology.add_semantic_class(2, "Face");
	ontology.add_semantic_class(3, "Weather");

	Annotation annotation;
	annotation.set_ontology(ontology);

	// annotate all semantic classes (empty annotation of each)
	annotation.annotate(1);
	annotation.annotate(2);
	annotation.annotate(3);

	size_t count = 0, N = 0;
	Annotation::iterator it = annotation.begin();
	while (it != annotation.end())
	{
		AnnotatedSemanticClass asc = *it++;
		count += asc.get_instances(Instance::POSITIVE).size();
		N++;
	}
	BOOST_CHECK(count == 0+0+0);
	BOOST_CHECK(N == 3);

	count = N = 0;
	Annotation::const_iterator const_it = annotation.begin();
	while (const_it != annotation.end())
	{
		AnnotatedSemanticClass asc = *const_it++;
		count += asc.get_instances(Instance::POSITIVE).size();
		N++;
	}
	BOOST_CHECK(count == 0+0+0);
	BOOST_CHECK(N == 3);
}

BOOST_AUTO_TEST_CASE( annotation_test_cout )
{
	Ontology ontology;
	ontology.set_name("Head parts");
	ontology.add_semantic_class(1, "Hair");
	ontology.add_semantic_class(2, "Face");
	ontology.add_semantic_class(3, "Ears");

	Annotation annotation;
	annotation.set_ontology(ontology);

	// annotate semantic class 1
	AnnotatedSemanticClass& asc1 = annotation.annotate(1);

	// add 2 positive instances
	asc1.add_instance(
		Instance("SegmentInstance1", "file:/path/to/0000001-vd.xml", 8,
			1, list<string>()),
		Instance::POSITIVE);
	asc1.add_instance(
		Instance("SegmentInstance2", "file:/path/to/0000002-vd.xml", 8,
			1, list<string>()),
		Instance::POSITIVE);

	// add 1 negative instance
	asc1.add_instance(
		Instance("SegmentInstance3", "file:/path/to/0000003-vd.xml", 8,
			1, list<string>()),
		Instance::NEGATIVE);

	// annotate semantic class 3
	AnnotatedSemanticClass& asc3 = annotation.annotate(3);

	// add 1 positive instance
	asc3.add_instance(
		Instance("SegmentInstance4", "file:/path/to/0000004-vd.xml", 8,
			1, list<string>()),
		Instance::POSITIVE);

	// add 1 neutral instance
	asc3.add_instance(
		Instance("SegmentInstance5", "file:/path/to/0000005-vd.xml", 8,
			1, list<string>()),
		Instance::NEGATIVE);

	stringstream expected;
	expected << "@@@ Annotation @@@"                                     << endl;
	expected << "> Annotated Ontology:"                                  << endl;
	expected << "Ontology name: Head parts"                              << endl;
	expected << "Semantic classes:"                                      << endl;
	expected << "  - Hair"                                               << endl;
	expected << "  - Face"                                               << endl;
	expected << "  - Ears"                                               << endl;
	expected << ""                                                       << endl;
	expected << "> Annotated Semantic Classes:"                          << endl;
	expected << "Semantic class id: 1"                                   << endl;
	expected << " `- positive instances (2)"                             << endl;
	expected << "    `- (SegmentInstance1) file:/path/to/0000001-vd.xml" << endl;
	expected << "    `- (SegmentInstance2) file:/path/to/0000002-vd.xml" << endl;
	expected << " `- negative instances (1)"                             << endl;
	expected << "    `- (SegmentInstance3) file:/path/to/0000003-vd.xml" << endl;
	expected << " `- neutral instances (0)"                              << endl;
	expected << ""                                                       << endl;
	expected << "Semantic class id: 3"                                   << endl;
	expected << " `- positive instances (1)"                             << endl;
	expected << "    `- (SegmentInstance4) file:/path/to/0000004-vd.xml" << endl;
	expected << " `- negative instances (1)"                             << endl;
	expected << "    `- (SegmentInstance5) file:/path/to/0000005-vd.xml" << endl;
	expected << " `- neutral instances (0)"                              << endl;
	expected << ""                                                       << endl;
	expected << "@@@ End of Annotation @@@"                              << endl;

	stringstream obtained;
	obtained << annotation;

	BOOST_CHECK_EQUAL(obtained.str(), expected.str());
}


BOOST_AUTO_TEST_SUITE_END ();
