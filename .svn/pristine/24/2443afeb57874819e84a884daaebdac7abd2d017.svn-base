// --------------------------------------------------------------
// Copyright (C)
// Universitat Politecnica de Catalunya (UPC) - Barcelona - Spain
// --------------------------------------------------------------

//!
//!  \file transformations.hpp
//!
//!  Numerical transformations
//!

#ifndef IMAGEPLUS_MATH_NUMERIC_TRANSFORMATIONS_HPP
#define IMAGEPLUS_MATH_NUMERIC_TRANSFORMATIONS_HPP


#include <imageplus/core.hpp>


namespace imageplus
{
    namespace math
    {
        namespace numeric
        {
            //!
            //! \brief Matrix Transposition
            //!
            //! \author Adolfo López <alopez@gps.tsc.upc.edu>
            //!
            //! \date 04-02-2008
            //!
            //! \param[in] in : Matrix to transpose
            //!
            //! \return a MultiArray matrix with the result
            //!
            template<typename T>
            MultiArray<T,2> trans( const MultiArray<T,2>& in ) throw (ImagePlusError);
    
            //!
            //! \brief Matrix Inversion
            //!
            //! \author Adolfo López <alopez@gps.tsc.upc.edu>
            //!
            //! \date 04-02-2008
            //!
            //! The function performs an LU decomposition of the matrix in order to compute its inverse.
            //! The algorithm is based on Boost efficient LU decomposition.
            //!
            //! \param[in] in : Matrix to invert
            //!
            //! \return a MultiArray matrix with the result. In case input matrix isn't invertible
            //! a zero matrix is returned.
            //!
            template<typename T>
            MultiArray<T,2> invert_matrix( const MultiArray<T,2>& in) throw (ImagePlusError);
        }
    }
}


#endif // IMAGEPLUS_MATH_NUMERIC_TRANSFORMATIONS_HPP
