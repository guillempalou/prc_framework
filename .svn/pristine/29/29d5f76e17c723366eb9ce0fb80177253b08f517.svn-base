/*****************************************************************************/
/*                                                                           */
/* Copyright (C)				       		             */
/* Universitat Politecnica de Catalunya (UPC) - Barcelona - Spain            */
/*                                                                           */
/*****************************************************************************/

/**
 * \file
 *
 * \brief Add brief description of the file here
 *        Brief description continues until blank line is found
 *
 * \author Javier Ruiz Hidalgo
 *
 * \date 28-Dec-2008
 *
 * Insert detailed description here
 *
 */

/*******************        INCLUDE FILES       *******************************/

#include <iostream>

#include <imageplus/core.hpp>
#include <readyuv.hpp>

using namespace std;
using namespace imageplus;
using namespace imageplus::io;

int main()
{
    uint64 sizex,sizey,totalframes;
    float64 fps;
    SeqFormat format;
    string comment;

    read_dat_info(string(TEST_DATA_PATH_R) + "/readsequence/seq444.dat",
                  sizex,
                  sizey,
                  totalframes,
                  fps,
                  format,
                  comment);
    if (sizex != 12) return -1;
    if (sizey != 8) return -1;
    if (totalframes != 10) return -1;
    if (fps != 12.0) return -1;
    if (format != YUV444P) return -1;

    cout << "seq444.dat: " << endl;
    cout << "   size = " << sizex << "x" << sizey << endl;
    cout << "   frames = " << totalframes << endl;
    cout << "   fps = " << fps << endl;
    cout << "   format = " << format << endl;
    cout << "   comment = " << comment << endl;

    // Read 400
    ImageGray<uint8> g;
    read_dat_info(string(TEST_DATA_PATH_R) + "/readsequence/seq400.dat",
                  sizex,
                  sizey,
                  totalframes,
                  fps,
                  format,
                  comment);
    for (uint64 i = 0; i < totalframes; i++)
    {
        g = read_frame_yuv400(string(TEST_DATA_PATH_R) + "/readsequence/seq400.yuv",i,sizex,sizey);
        if (g(GRAY_CHANNEL) != (uint8)i) return -1;
    }
                          
    // Read 420
    ImageYUV420<uint8> ima420;
    read_dat_info(string(TEST_DATA_PATH_R) + "/readsequence/seq420.dat",
                  sizex,
                  sizey,
                  totalframes,
                  fps,
                  format,
                  comment);
    for (uint64 i = 0; i < totalframes; i++)
    {
        ima420 = read_frame_yuv420(string(TEST_DATA_PATH_R) + "/readsequence/seq420.yuv",i,sizex,sizey);
        if ( ima420(Y_CHANNEL) != (uint8)i ) return -1;
        if ( ima420(U_CHANNEL) != (uint8)(i+50) ) return -1;
        if ( ima420(V_CHANNEL) != (uint8)(i+100) ) return -1;
    }

    // Read 444
    ImageYUV<uint8> ima444;
    read_dat_info(string(TEST_DATA_PATH_R) + "/readsequence/seq444.dat",
                  sizex,
                  sizey,
                  totalframes,
                  fps,
                  format,
                  comment);
    for (uint64 i = 0; i < totalframes; i++)
    {
        ima444 = read_frame_yuv444(string(TEST_DATA_PATH_R) + "/readsequence/seq444.yuv",i,sizex,sizey);
        if ( ima444(Y_CHANNEL) != (uint8)i ) return -1;
        if ( ima444(U_CHANNEL) != (uint8)(i+50) ) return -1;
        if ( ima444(V_CHANNEL) != (uint8)(i+100) ) return -1;
    }
 

    cout << "ok" << endl;
}

  
