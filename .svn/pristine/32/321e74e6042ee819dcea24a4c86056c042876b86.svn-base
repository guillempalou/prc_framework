// --------------------------------------------------------------
// Copyright (C)
// Universitat Politecnica de Catalunya (UPC) - Barcelona - Spain
// --------------------------------------------------------------

//!
//!  \file matrices.hpp
//!
//!  Utility matrices
//!

#ifndef IMAGEPLUS_MATH_NUMERIC_MATRICES_HPP
#define IMAGEPLUS_MATH_NUMERIC_MATRICES_HPP


#include <imageplus/core.hpp>


namespace imageplus
{
    namespace math
    {
        namespace numeric
        {
            //!
            //! \brief Creates an squared identity matrix
            //!
            //! \author Javier Ruiz Hidalgo <j.ruiz@upc.edu>
            //!
            //! \date 06-02-2008
            //!
            //! \param[in] size : Size of the squared identity matrix
            //!
            //! \return MultiArray identity matrix
            //!
            template<typename T>
            MultiArray<T,2> identity_matrix(uint64 size);


            //!
            //! \brief Check if an matrix is upper triangular
            //!
            //! \author Ramon Morros <ramon.morros@upc.edu>
            //!
            //! \date 22-05-2008
            //!
            //! \param[in] ma : Input matrix
            //!
            //! \return true if upper triangular, false otherwise
            //!
            template<typename T>
            bool is_upper_triangular(const MultiArray<T,2>& ma);

            //!
            //! \brief Check if an matrix is orthogonal (A*A' = I)
            //!
            //! \author Ramon Morros <ramon.morros@upc.edu>
            //!
            //! \date 22-05-2008
            //!
            //! \param[in] ma : Input matrix
            //!
            //! \return true if orthogonal, false otherwise
            //!
            template<typename T>
            bool is_orthogonal(const MultiArray<T,2>& ma);

            //!
            //! \brief Check if an matrix is simmetric (A = A')
            //!
            //! \author Ramon Morros <ramon.morros@upc.edu>
            //!
            //! \date 22-05-2008
            //!
            //! \param[in] ma : Input matrix
            //!
            //! \return true if simmetric, false otherwise
            //!
            template<typename T>
            bool is_simmetric(const MultiArray<T,2>& ma);

        }
    }
}


#endif // IMAGEPLUS_MATH_NUMERIC_MATRICES_HPP
