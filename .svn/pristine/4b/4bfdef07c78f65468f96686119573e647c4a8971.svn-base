// --------------------------------------------------------------
// Copyright (C)
// Universitat Politecnica de Catalunya (UPC) - Barcelona - Spain
// --------------------------------------------------------------

//
//  This file is used as a context check for the build system.
//  It is compiled, linked and executed to check if local environment is 
//  ready for building the software.
//
//  Author: Albert Gil, UPC <agil@gps.tsc.upc.edu>
//
//  Date: 22-1-2008
//

#include <boost/version.hpp>
#include <boost/program_options.hpp>
#include <boost/filesystem.hpp>

#include <boost/thread/thread.hpp>
#include <boost/bind.hpp>

#include <boost/date_time/posix_time/posix_time.hpp>

#include <iostream>

namespace po = boost::program_options;
using namespace std;


#define IMAGEPLUS_BOOST_VERSION     103500
#define IMAGEPLUS_BOOST_VERSION_STR "1_35_0"

void check_thread_f(int in)
{
	
}

int main(int ac, char **av) 
{
    // Check version
    if ( BOOST_VERSION < IMAGEPLUS_BOOST_VERSION ) 
    {
      	std::cout << "Your boost library version is: " << BOOST_LIB_VERSION << std::endl;
      	std::cout << "ImagePlus needs at least:      " << IMAGEPLUS_BOOST_VERSION_STR << std::endl;
        return 1;
    }	
      
    // Check program options   
    try 
    {
        po::options_description desc("options");
        desc.add_options()("help", "produce help message");
    
        po::variables_map vm;        
        po::store(po::parse_command_line(ac, av, desc), vm);
    
        cout << desc << "\n";
    }
    catch(exception& e) 
    {
        cout << "Error with Boost.ProgramOptions Library: " <<  e.what() << "\n";
        return 1;
    }
    
    // check filesystem
    // TODO: Move this check to io_auxiliar as a method 
    boost::filesystem::path my_path( "my_file" );
    boost::filesystem::exists( "my_file" );

    // check boost_thread
	boost::thread check_thread( boost::bind(&check_thread_f, 0) );
	check_thread.join();

	
	//check date_time
	boost::posix_time::ptime ts(boost::posix_time::microsec_clock::local_time());
    
    return 0;
  
}
